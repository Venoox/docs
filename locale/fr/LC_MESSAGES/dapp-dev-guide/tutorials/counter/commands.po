# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, CasperLabs LLC
# This file is distributed under the same license as the CasperLabs Tech
# Spec package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
# 
# Translators:
# muss abahmane <elmabahma@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CasperLabs Tech Spec\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-09-08 20:42+0000\n"
"PO-Revision-Date: 2021-09-08 20:46+0000\n"
"Last-Translator: muss abahmane <elmabahma@gmail.com>, 2021\n"
"Language-Team: French (https://www.transifex.com/caspernetwork/teams/122124/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:2
msgid "Important Commands"
msgstr "Commandes importantes"

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:5
msgid "Faucet Account Information"
msgstr "Informations sur le compte Faucet"

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:11
msgid ""
"This command is part of NCTL and provides a view into the faucet account "
"details. The faucet is the default account created on the network. Generally"
" on the Mainnet, your own account is used to fund transactions. However, for"
" the sake of this tutorial, we do not need accounts and will use the faucet "
"to execute deploys. This command supplies two key pieces of information: the"
" account’s `secret key` location and the `account hash`, which are used to "
"sign deploys and query the network state, respectively."
msgstr ""
"Cette commande fait partie de NCTL et permet de visualiser les détails du "
"compte faucet. Le faucet est le compte par défaut créé sur le réseau. En "
"général, sur le Mainnet, votre propre compte est utilisé pour financer les "
"transactions. Cependant, dans le cadre de ce tutoriel, nous n'avons pas "
"besoin de comptes et nous utiliserons Faucet pour exécuter les déploiements."
" Cette commande fournit deux informations clés : l'emplacement de la `secret"
" key` du compte et le `account hash`, qui sont utilisés pour signer les "
"déploiements et interroger l'état du réseau, respectivement."

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:14
msgid "State Root Hash"
msgstr "State Root Hash"

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:20
msgid ""
"The first command that we will cover as part of the `casper-client` tool is "
"the `get-state-root-hash` command. The state root hash is an identifier of "
"the current network state. It is similar to a Git commit ID for commit "
"history. It gives a snapshot of the blockchain state at a moment in time. "
"For this tutorial, it will be used to query the network state after we take "
"actions with deployments."
msgstr ""
"La première commande que nous allons aborder dans le cadre de l'outil "
"`casper-client` est la commande `get-state-root-hash`. Le 'state root hash' "
"est un identifiant de l'état actuel du réseau. Il est similaire à un ID de "
"commit Git pour l'historique des commit. Il donne un instantané de l'état de"
" la blockchain à un moment donné. Pour ce tutoriel, il sera utilisé pour "
"interroger l'état du réseau après avoir effectué des actions avec les "
"déploiements."

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:24
msgid ""
"After any deploys to the network, you must get the new state root hash to "
"see the new changes reflected. Otherwise, you will be looking at events in "
"the past."
msgstr ""
"Après tout déploiement sur le réseau, vous devez obtenir le nouveau 'state "
"root hash' pour voir les nouveaux changements reflétés. Sinon, vous "
"regarderez des événements du passé."

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:27
msgid "Querying Network State"
msgstr "Interroger l'état du réseau"

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:37
msgid ""
"This command allows you to query the state of a Casper network at a given "
"moment in time, which is specified by the `state-root-hash` described above."
msgstr ""
"Cette commande vous permet d'interroger l'état d'un réseau Casper à un "
"moment donné dans le temps, qui est spécifié par le `state-root-hash` décrit"
" ci-dessus."

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:39
msgid ""
"The `node-address` is the server (localhost when running on a local NCTL "
"network)."
msgstr ""
"Le `node-address` est le serveur (localhost lorsqu'il fonctionne sur un "
"réseau local NCTL)."

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:40
msgid ""
"The `key` is the identifier for the query. It must be either the account "
"public key, account hash, contract address hash, transfer hash, or deploy "
"hash. We will demonstrate two of these key types in this tutorial."
msgstr ""
"La `key` est l'identifiant de la requête. Il doit s'agir de la clé publique "
"du compte, du hash du compte, du hash de l'adresse du contrat, du hash du "
"transfert ou du hash du déploiement. Nous allons démontrer deux de ces types"
" de clés dans ce tutoriel."

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:41
msgid ""
"The optional query path argument (`q`) allows you to drill into the "
"specifics of a query concerning the key."
msgstr ""
"L'argument optionnel \"query path\" (`q`) vous permet d'approfondir les "
"spécificités d'une requête concernant la clé."

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:44
msgid "Put Deploys (onto the Chain)"
msgstr "Put Deploys  (sur la chaîne)"

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:47
msgid "Deploy via a compiled WASM binary"
msgstr "Déployer via un binaire WASM compilé"

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:58
msgid ""
"This command creates a deploy and sends it to the network for execution. In "
"this first usage of the command,"
msgstr ""
"Cette commande crée un déploiement et l'envoie au réseau pour exécution. "
"Dans cette première utilisation de la commande,"

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:60
msgid "The `session-path` points to a compiled WASM contract."
msgstr "Le `session-path` pointe vers un contrat WASM compilé."

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:61
msgid ""
"This contract is then deployed to the network specified by `node-address` "
"and `chain-name`. By default, NCTL names the chain “casper-net-1” but this "
"is configurable."
msgstr ""
"Ce contrat est ensuite déployé sur le réseau spécifié par `node-address` et "
"`chain-name`. Par défaut, NCTL nomme la chaîne \"casper-net-1\" mais ceci "
"est configurable."

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:62
msgid ""
"The `payment-amount` is in units of motes (1 nano-CSPR) and is required to "
"pay the transaction fee for the deployment. If it is too small, the "
"transaction will get denied due to insufficient funds."
msgstr ""
"Ce contrat est ensuite déployé sur le réseau spécifié par `node-address` et "
"`chain-name`. Par défaut, NCTL nomme la chaîne \"casper-net-1\" mais ceci "
"est configurable."

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:66
msgid "Deploy via a named key already on the blockchain"
msgstr "Déployer via une clé nommée déjà sur la blockchain"

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:79
msgid ""
"This second usage of `put-deploy` does not place a new contract on the "
"chain, but it allows you to call entry points (functions) defined in smart "
"contracts."
msgstr ""
"Cette deuxième utilisation de `put-deploy` ne place pas un nouveau contrat "
"sur la chaîne, mais elle vous permet d'appeler des points d'entrée "
"(fonctions) définis dans les smart contracts."

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:81
msgid ""
"Here we show the example using “counter” and “counter_inc” because, in the "
"`Counter tutorial <walkthrough.html>`_, we have defined a smart contract by "
"the name of “counter”, and there is an entry-point named “counter_inc” "
"defined within it. However, these will be different when you write your "
"contracts."
msgstr ""
"Ici, nous montrons l'exemple en utilisant \"counter\" et \"counter_inc\" "
"parce que, dans le `Tutoriel counter <walkthrough.html>`_, nous avons défini"
" un contrat intelligent du nom de \"counter\", et il y a un point d'entrée "
"nommé \"counter_inc\" défini dans celui-ci. Cependant, ceux-ci seront "
"différents lorsque vous écrirez vos contrats."

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:85
msgid "Get Deploys (from the Chain)"
msgstr "Get Deploys (de la chaîne)"

#: ../../dapp-dev-guide/tutorials/counter/commands.rst:93
msgid ""
"The `get-deploy` command is complementary to the `put-deploy` command. It "
"retrieves a deploy from the network and allows you to check the status of "
"the deploy. The `DEPLOY_HASH` is the identifier to a specific deploy and is "
"returned by the `put-deploy` command."
msgstr ""
"La commande `get-deploy` est complémentaire de la commande `put-deploy`. "
"Elle récupère un déploiement sur le réseau et vous permet de vérifier le "
"statut du déploiement. Le `DEPLOY_HASH` est l'identifiant d'un déploiement "
"spécifique et est retourné par la commande `put-deploy`."
