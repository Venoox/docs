# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, CasperLabs LLC
# This file is distributed under the same license as the CasperLabs Tech
# Spec package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
# 
# Translators:
# muss abahmane <elmabahma@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CasperLabs Tech Spec\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-09-08 20:42+0000\n"
"PO-Revision-Date: 2021-09-08 20:46+0000\n"
"Last-Translator: muss abahmane <elmabahma@gmail.com>, 2021\n"
"Language-Team: French (https://www.transifex.com/caspernetwork/teams/122124/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:2
msgid "Tutorial Walkthrough"
msgstr "Tutoriel"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:4
msgid ""
"Now that we are familiar with the basic commands, we can begin the tutorial "
"to deploy a contract application and use it on the network."
msgstr ""
"Maintenant que nous sommes familiarisés avec les commandes de base, nous "
"pouvons commencer le tutoriel pour déployer une application de contrat et "
"l'utiliser sur le réseau."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:7
msgid "Clone the Contracts"
msgstr "Cloner les Contrats"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:9
msgid ""
"First, we will need to clone `the counter contract repository "
"<https://github.com/casper-ecosystem/counter>`_ to our local machine."
msgstr ""
"Tout d'abord, nous devons cloner  ` le dépôt du counter contract "
"<https://github.com/casper-ecosystem/counter>`_ sur notre machine locale."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:15
msgid ""
"If you explore the source code, you will see that there are two smart "
"contracts:"
msgstr ""
"Si vous explorez le code source, vous verrez qu'il existe deux contrats "
"intelligents :"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:19
msgid "``counter-define``"
msgstr "``counter-define``"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:18
msgid ""
"Defines two named keys: `counter` to reference the contract and an "
"associated variable `count` to store the number of times we increment the "
"counter"
msgstr ""
"Définit deux clés nommées : `counter` pour référencer le contrat et une "
"variable associée `count` pour stocker le nombre de fois que nous "
"incrémentons le compteur."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:19
msgid "Provides a function to get the current count (`counter_get`)"
msgstr "Fournit une fonction pour obtenir le compte courant (`counter_get`)"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:20
msgid "Provides a function to increment the current count (`counter_inc`)"
msgstr ""
"Fournit une fonction pour incrémenter le compte courant (`counter_inc`)"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:23
msgid "``counter-call``"
msgstr "``counter-call``"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:22
msgid ""
"Retrieves the `counter-define` contract, gets the current count value, "
"increments it, and makes sure count was incremented by 1"
msgstr ""
"Récupère le contrat `counter-define`, récupère la valeur actuelle du "
"compteur, l'incrémente et s'assure que le compteur a été incrémenté de 1."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:26
msgid "Create a Local Network"
msgstr "Créer un réseau local"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:28
msgid ""
"After you have gotten familiar with the counter source code, we need to "
"create a local blockchain network to deploy the contract. If you completed "
"the NCTL tutorial, all you need to do is allocate the network assets and "
"then start the network."
msgstr ""
"Après vous être familiarisé avec le code source du 'counter contract', nous "
"devons créer un réseau blockchain local pour déployer le contrat. Si vous "
"avez terminé le tutoriel NCTL, tout ce que vous avez à faire est d'allouer "
"les actifs du réseau, puis de démarrer le réseau."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:30
msgid ""
"If you run the following line in your terminal, you should be able to spin "
"up a network effortlessly."
msgstr ""
"Si vous exécutez la ligne suivante dans votre terminal, vous devriez être en"
" mesure de créer un réseau sans effort."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:38
msgid ""
"If it fails for any reason, please refer the `NCTL tutorial "
"<https://docs.casperlabs.io/en/latest/dapp-dev-guide/setup-nctl.html>`_ and "
"make sure that all your packages are up to date)."
msgstr ""
"Si elle échoue pour une raison quelconque, veuillez vous référer au "
"`Tutorial NCTL <https://docs.casperlabs.io/en/latest/dapp-dev-guide/setup-"
"nctl.html>`_ et assurez-vous que tous vos packages sont à jour)."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:41
msgid "View the Network State"
msgstr "Voir l'état du réseau"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:43
msgid ""
"With a network up and running, you can use the casper-client query-state "
"command to check the status of the network. However, we first need an "
"`account hash` and the `state-root-hash` so that we can get the current "
"snapshot. Once we have that information, we can check how the network looks."
msgstr ""
"Avec un réseau opérationnel, vous pouvez utiliser la commande casper-client "
"query-state pour vérifier l'état du réseau. Cependant, nous avons d'abord "
"besoin d'un `account hash` et du `state-root-hash` afin de pouvoir obtenir "
"le snapshot actuel. Une fois que nous avons ces informations, nous pouvons "
"vérifier l'état du réseau."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:45
msgid "As a summary, we need to use the following three commands:"
msgstr "En résumé, nous devons utiliser les trois commandes suivantes :"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:47
msgid "``nctl-view-faucet-account``: get the account hash"
msgstr "``nctl-view-faucet-account`` : récupérer le hash du compte"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:48
msgid "``casper-client get-state-root-hash``: get the state root hash"
msgstr "``casper-client get-state-root-hash`` : récupère le state root hash"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:49
msgid "``casper-client query-state``: get the network state"
msgstr "``casper-client query-state`` : obtenir l'état du réseau"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:51
msgid ""
"Let’s execute the commands in order. First, we need the faucet information:"
msgstr ""
"Exécutons les commandes dans l'ordre. D'abord, nous avons besoin des "
"informations sur le faucet :"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:57
msgid ""
"If NCTL is correctly up and running, this command should return quite a bit "
"of information about the faucet account. Feel free to look through the "
"records and make a note of the `account-hash` field and the `secret_key.pem`"
" path because we will often use both."
msgstr ""
"Si NCTL est correctement installé et fonctionne, cette commande devrait "
"retourner pas mal d'informations sur le compte faucet. N'hésitez pas à "
"regarder les enregistrements et à noter le champ `account-hash` et le chemin"
" `secret_key.pem` car nous les utiliserons souvent tous les deux."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:59
msgid "Next, get the state root hash:"
msgstr "Ensuite, obtenez le state root hash :"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:65
msgid ""
"We are using localhost as the node server since the network is running on "
"our local machine. Make a note of the `state-root-hash` that is returned, "
"but keep in mind that this hash value will need to be updated every time we "
"modify the network state. Finally, query the actual state:"
msgstr ""
"Nous utilisons localhost comme serveur de noeuds puisque le réseau "
"fonctionne sur notre machine locale. Notez le `state-root-hash` qui est "
"retourné, mais gardez à l'esprit que cette valeur de hash devra être mise à "
"jour chaque fois que nous modifions l'état du réseau. Enfin, interrogez "
"l'état actuel :"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:74
msgid ""
"Substitute the state root hash and account hash values you just retrieved "
"into this command and execute it. Do not be surprised if you see nothing on "
"the network. That is because we have not deployed anything to the network "
"yet!"
msgstr ""
"Remplacez les valeurs de state root hash et le hash du compte que vous venez"
" de récupérer par cette commande et exécutez-la. Ne soyez pas surpris si "
"vous ne voyez rien sur le réseau. C'est parce que nous n'avons encore rien "
"déployé sur le réseau !"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:77
msgid "Deploy the Counter"
msgstr "Déployer le contrat  'Counter'"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:79
msgid ""
"Let us try deploying the `counter-define` contract to the chain. First, we "
"need to compile it."
msgstr ""
"Essayons de déployer le contrat `counter-define` sur la chaîne. D'abord, "
"nous devons le compiler."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:81
msgid ""
"The makefile included in the repository makes compilation trivial. With "
"these two commands, we can build (in release mode) and test the contract "
"before deploying it. `make prepare` sets the WASM target and `make test` "
"builds the contracts and verifies them."
msgstr ""
"Le makefile inclus dans le dépôt rend la compilation triviale. Avec ces deux"
" commandes, nous pouvons construire (en mode release) et tester le contrat "
"avant de le déployer. `make prepare` définit la cible WASM et `make test` "
"construit les contrats et les vérifie."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:88
msgid ""
"With the compiled contract, we can call the `casper-client put-deploy` "
"command to put the contract on the chain."
msgstr ""
"Avec le contrat compilé, nous pouvons appeler la commande `casper-client "
"put-deploy` pour mettre le contrat sur la chaîne."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:99
msgid ""
"Replace the ``[PATH_TO_YOUR_KEY]`` field with the actual path of where your "
"secret key is stored. It is one of the fields that gets returned when you "
"call `nctl-view-faucet-account`."
msgstr ""
"Remplacez le champ ``[PATH_TO_YOUR_KEY]`` par le chemin réel où votre clé "
"secrète est stockée. C'est l'un des champs qui est renvoyé lorsque vous "
"appelez `nctl-view-faucet-account`."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:100
msgid ""
"The `session-path` argument should point to wherever you compiled counter-"
"define.wasm on your computer. The code snippet shows you the default path if"
" the counter folder is in the same directory."
msgstr ""
"L'argument `session-path` doit pointer vers l'endroit où vous avez compilé "
"counter-define.wasm sur votre ordinateur. L'extrait de code vous montre le "
"chemin par défaut si le dossier counter est dans le même répertoire."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:102
msgid ""
"Once you call this command, it will return a deploy hash. You can use this "
"hash to verify that the deploy successfully took place."
msgstr ""
"Lorsque vous appelez cette commande, elle renvoie un hash de déploiement. "
"Vous pouvez utiliser ce hash pour vérifier que le déploiement a bien eu "
"lieu."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:110
msgid "View the Updated Network State"
msgstr "Afficher l'état du réseau mis à jour"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:112
msgid ""
"Hopefully, the deployment was successful, but is the named key visible on "
"the chain now? Call ``casper-client query-state`` to check it out."
msgstr ""
"Avec un peu de chance, le déploiement a réussi, mais la clé nommée est-elle "
"maintenant visible sur la chaîne ? Appelez ``casper-client query-state`` "
"pour le vérifier."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:116
msgid ""
"We must get the new state root hash since we just wrote a deploy to the "
"chain."
msgstr ""
"Nous devons récupérer le state root hash puisque nous venons d'écrire un "
"deploy à la chaîne."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:118
msgid ""
"If you run these two commands, there will be a new counter named key on the "
"chain."
msgstr ""
"Si vous exécutez ces deux commandes, il y aura une nouvelle clé  'counter'  "
"nommée sur la chaîne."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:120
#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:184
#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:222
msgid "Get the NEW state-root-hash:"
msgstr "Obtenez le Nouveau state-root-hash :"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:126
msgid "Get the network state:"
msgstr "Obtenez l'état du réseau :"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:135
msgid ""
"We can actually dive further into the data stored on the chain using the "
"query path argument or directly querying the deploy hash. Try the following "
"commands and notice that each one gives you a different level of detail."
msgstr ""
"Nous pouvons en fait plonger plus loin dans les données stockées sur la "
"chaîne en utilisant l'argument du chemin de requête ou en interrogeant "
"directement le hash de déploiement. Essayez les commandes suivantes et "
"remarquez que chacune d'entre elles vous donne un niveau de détail "
"différent."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:137
msgid "Retrieve the specific counter contract details:"
msgstr "Récupérer les détails spécifiques du counter contrat :"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:145
msgid "Retrieve the specific counter variable details:"
msgstr "Récupérer les détails spécifiques de la variable counter :"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:153
msgid "Retrieve the specific deploy details:"
msgstr "Récupérer les détails spécifiques du déploiement:"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:160
msgid ""
"The first two commands access the counter and count named keys, "
"respectively, using the query path argument. The third command uses the "
"deploy hash (the return value of `put-deploy`) to query the state of that "
"specific deploy only."
msgstr ""
"es deux premières commandes accèdent aux clés nommées counter et count, "
"respectivement, en utilisant l'argument query path. La troisième commande "
"utilise le hash de déploiement (la valeur de retour de `put-deploy`) pour "
"demander l'état de ce déploiement spécifique seulement."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:163
msgid "Increment the Counter"
msgstr "Incrémenter le Counter"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:164
msgid ""
"We now have a counter on the chain, and we verified everything is good. Now "
"we want to increment it. We can do that by calling the entry-point "
"`counter_inc`, the function we defined in the `counter-define` contract. You"
" can call an entry-point in a deployed contract by using the `put-deploy` "
"command as illustrated here:"
msgstr ""
"Nous avons maintenant un counter sur la chaîne, et nous avons vérifié que "
"tout est bon. Maintenant, nous voulons l'incrémenter. Nous pouvons le faire "
"en appelant le point d'entrée `counter_inc`, la fonction que nous avons "
"définie dans le contrat `counter-define`. Vous pouvez appeler un point "
"d'entrée dans un contrat déployé en utilisant la commande `put-deploy` comme"
" illustré ici :"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:176
msgid ""
"Notice that this command is nearly identical to the command used to deploy "
"the contract. But, instead of `session-path` pointing to the WASM binary, we"
" have `session-name` and `session-entry-point` identifying the on-chain "
"contract and its associated function to execute. There is no WASM file "
"needed since the contract is already on the blockchain."
msgstr ""
"  \n"
"Nous avons maintenant un counter sur la chaîne, et nous avons vérifié que tout est bon. Maintenant, nous voulons l'incrémenter. Nous pouvons le faire en appelant le point d'entrée `counter_inc`, la fonction que nous avons définie dans le contrat `counter-define`. Vous pouvez appeler un point d'entrée dans un contrat déployé en utilisant la commande `put-deploy` comme illustré ici :"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:180
msgid "View the Updated Network State Again"
msgstr "Visualiser à nouveau l'état du réseau mis à jour"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:182
msgid ""
"After calling the entry-point above, theoretically, the counter value should"
" have been incremented by one, but how can we be sure of that? We can query "
"the network again, but remember that we have to get a new state root hash "
"once again. Let us check if the counter was incremented by just looking at "
"the count with the query argument since we are not concerned with the rest "
"of the chain right now."
msgstr ""
"Après avoir appelé le point d'entrée ci-dessus, théoriquement, la valeur du "
"compteur devrait avoir été incrémentée de un, mais comment en être sûr ? "
"Nous pouvons à nouveau interroger le réseau, mais n'oubliez pas que nous "
"devons à nouveau obtenir un nouveau state root hash. Vérifions si le "
"compteur a été incrémenté en regardant simplement le compte avec l'argument "
"query puisque nous ne sommes pas concernés par le reste de la chaîne pour le"
" moment."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:190
#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:228
msgid "Get the network state, specifically for the count variable this time:"
msgstr ""
"Obtenez l'état du réseau, spécifiquement pour la variable count cette fois :"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:198
msgid ""
"You should be able to see the counter variable and observe its value has "
"increased now."
msgstr ""
"Vous devriez pouvoir voir la variable du counter et observer que sa valeur a"
" augmenté maintenant."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:201
msgid "Increment the Counter Again"
msgstr "Incrémenter le Counter de nouveau"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:203
msgid ""
"If you recall, we had a second contract named `counter-call` in the "
"repository. This time around, we can see if we can increment the count using"
" that second contract instead of the session entry-point we used above."
msgstr ""
"Si vous vous souvenez, nous avions un deuxième contrat nommé `counter-call` "
"dans le référentiel. Cette fois-ci, nous pouvons voir si nous pouvons "
"incrémenter le compte en utilisant ce second contrat au lieu du point "
"d'entrée de la session que nous avons utilisé ci-dessus."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:205
msgid ""
"Keep in mind, this is another `put-deploy` call just like when we deployed "
"the `counter_define` contract to the blockchain. The session-path is once "
"again going to be different for you depending on where you compiled the "
"contract."
msgstr ""
"Gardez à l'esprit qu'il s'agit d'un autre appel `put-deploy` comme lorsque "
"nous avons déployé le contrat `counter_define` sur la blockchain. Le chemin "
"de la session sera encore une fois différent pour vous selon l'endroit où "
"vous avez compilé le contrat."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:218
msgid "View the Final Network State"
msgstr "Voir l'Etat Final du Réseau"

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:220
msgid ""
"Before we wrap up this guide, let’s make sure that the second contract did "
"in fact, update the counter from the first contract! Just as before, we need"
" a new state-root-hash, and then we can query the network as we have grown "
"accustomed to by now."
msgstr ""
"Avant de conclure ce guide, vérifions que le second contrat a bien mis à "
"jour le compteur du premier contrat ! Comme précédemment, nous avons besoin "
"d'un nouveau state-root-hash, puis nous pouvons interroger le réseau comme "
"nous en avons pris l'habitude."

#: ../../dapp-dev-guide/tutorials/counter/walkthrough.rst:236
msgid ""
"If all went according to plan, your counter should have gone from 0 to 1 "
"before and now from 1 to 2 as you incremented it throughout this tutorial. "
"Congratulations on building, deploying, and using a smart contract on your "
"local test network! Now you are ready to build your own dApps and launch "
"them onto the Casper blockchain."
msgstr ""
"Si tout s'est déroulé comme prévu, votre compteur devrait être passé de 0 à "
"1 auparavant et maintenant de 1 à 2 au fur et à mesure que vous l'avez "
"incrémenté tout au long de ce tutoriel. Félicitations pour avoir construit, "
"déployé et utilisé un contrat intelligent sur votre réseau local de test ! "
"Vous êtes maintenant prêt à créer vos propres dApps et à les lancer sur la "
"blockchain Casper."
