# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, CasperLabs LLC
# This file is distributed under the same license as the CasperLabs Tech
# Spec package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
# 
# Translators:
# David Tsaritov <tsaritov@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CasperLabs Tech Spec\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-23 20:03+0000\n"
"PO-Revision-Date: 2021-06-26 21:47+0000\n"
"Last-Translator: David Tsaritov <tsaritov@gmail.com>, 2021\n"
"Language-Team: Russian (https://www.transifex.com/caspernetwork/teams/122124/ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../glossary/C.rst:2
msgid "C"
msgstr "C"

#: ../../glossary/C.rst:5
msgid "`A <A.html>`_"
msgstr "`A <A.html>`_"

#: ../../glossary/C.rst:5
msgid "`B <B.html>`_"
msgstr "`B <B.html>`_"

#: ../../glossary/C.rst:5
msgid "`C <C.html>`_"
msgstr "`C <C.html>`_"

#: ../../glossary/C.rst:5
msgid "`D <D.html>`_"
msgstr "`D <D.html>`_"

#: ../../glossary/C.rst:5
msgid "`E <E.html>`_"
msgstr "`E <E.html>`_"

#: ../../glossary/C.rst:5
msgid "`F <F.html>`_"
msgstr "`F <F.html>`_"

#: ../../glossary/C.rst:5
msgid "`G <G.html>`_"
msgstr "`G <G.html>`_"

#: ../../glossary/C.rst:5
msgid "`H <H.html>`_"
msgstr "`H <H.html>`_"

#: ../../glossary/C.rst:5
msgid "`I <I.html>`_"
msgstr "`I <I.html>`_"

#: ../../glossary/C.rst:5
msgid "`J <J.html>`_"
msgstr "`J <J.html>`_"

#: ../../glossary/C.rst:5
msgid "`K <K.html>`_"
msgstr "`K <K.html>`_"

#: ../../glossary/C.rst:5
msgid "`L <L.html>`_"
msgstr "`L <L.html>`_"

#: ../../glossary/C.rst:5
msgid "`M <M.html>`_"
msgstr "`M <M.html>`_"

#: ../../glossary/C.rst:5
msgid "`N <N.html>`_"
msgstr "`N <N.html>`_"

#: ../../glossary/C.rst:5
msgid "`O <O.html>`_"
msgstr "`O <O.html>`_"

#: ../../glossary/C.rst:5
msgid "`P <P.html>`_"
msgstr "`P <P.html>`_"

#: ../../glossary/C.rst:5
msgid "`Q <Q.html>`_"
msgstr "`Q <Q.html>`_"

#: ../../glossary/C.rst:5
msgid "`R <R.html>`_"
msgstr "`R <R.html>`_"

#: ../../glossary/C.rst:5
msgid "`S <S.html>`_"
msgstr "`S <S.html>`_"

#: ../../glossary/C.rst:5
msgid "`T <T.html>`_"
msgstr "`T <T.html>`_"

#: ../../glossary/C.rst:5
msgid "`U <U.html>`_"
msgstr "`U <U.html>`_"

#: ../../glossary/C.rst:5
msgid "`V <V.html>`_"
msgstr "`V <V.html>`_"

#: ../../glossary/C.rst:5
msgid "`W <W.html>`_"
msgstr "`W <W.html>`_"

#: ../../glossary/C.rst:5
msgid "`X <X.html>`_"
msgstr "`X <X.html>`_"

#: ../../glossary/C.rst:5
msgid "`Y <Y.html>`_"
msgstr "`Y <Y.html>`_"

#: ../../glossary/C.rst:5
msgid "`Z <Z.html>`_"
msgstr "`Z <Z.html>`_"

#: ../../glossary/C.rst:9
msgid "Cargo"
msgstr "Cargo"

#: ../../glossary/C.rst:10
msgid ""
"Cargo is Rust’s build system and package manager. This tool manages Rust "
"projects, such as building code and downloading dependencies."
msgstr ""
"Cargo - это система сборки и менеджер-упаковщик в Rust. Это инструментарий "
"для управления проектами Rust, такими как сборка кода и загрузка "
"зависимостей. "

#: ../../glossary/C.rst:13
msgid "Casper network"
msgstr "Сеть Casper"

#: ../../glossary/C.rst:14
msgid ""
"The Casper network is a Proof-of-Stake blockchain that allows validators to "
"stake the Casper native token CSPR on the network. Validators receive CSPR "
"as an incentive for continuing to maintain and secure the network. CSPR "
"rewards are distributed as blocks are validated into existence and organized"
" into eras."
msgstr ""
"Сеть Casper - это блокчейн Proof-of-Stake, который позволяет валидаторам "
"размещать в сети собственный токен Casper CSPR. Валидаторы получают CSPR как"
" стимул для продолжения обслуживания и защиты сети. Вознаграждения CSPR "
"распределяются по мере того, как блоки подтверждаются и объединяются в "
"эпохи."

#: ../../glossary/C.rst:17
msgid "CBC"
msgstr "CBC"

#: ../../glossary/C.rst:18
msgid ""
"Correct by construction. CBC Casper is a family of consensus algorithms "
"developed by Vlad Zamfir."
msgstr ""
"Эта аббревиатура переводится как \"правильный по конструкции\". CBC Casper -"
" это семейство алгоритмов консенсуса, разработанных Владом Замфир. "

#: ../../glossary/C.rst:21
msgid "Chainspec"
msgstr "Структура Chainspec"

#: ../../glossary/C.rst:22
msgid ""
"A collection of configuration settings describing the state of the system at"
" genesis and upgrades to basic system functionality (including system "
"contracts and gas costs) occurring after `genesis <G.html#genesis>`_."
msgstr ""
"Набор настроек конфигурации, описывающих состояние системы при генезисе и "
"обновления до базового функционала системы (включая системные контракты и "
"цены на газ), появляющийся после генезиса `genesis <G.html#genesis>`_."

#: ../../glossary/C.rst:25
msgid "Consensus"
msgstr "Консенсус"

#: ../../glossary/C.rst:26
msgid ""
"An algorithm used to mandate agreement on the `blockchain "
"<B.html#blockchain>`_ between all nodes. The blockchain, although being "
"built in a decentralized way, eventually converges so that all nodes "
"eventually agree on whether a given block is part of the chain or not."
msgstr ""
"Алгоритм, используемый для заключения соглашения по блокчейну `blockchain "
"<B.html#blockchain>`_ между всеми нодами. Блокчейн, хотя и собран "
"децентрализованно, в конце концов стремится к тому, чтобы все ноды пришли к "
"соглашению по поводу определенного блока - является ли он частью сети, или "
"нет. "

#: ../../glossary/C.rst:28
msgid ""
"Casper uses the `Highway "
"<https://docs.casperlabs.io/en/latest/theory/highway.html>`_ algorithm in "
"the *CBC Casper* family of consensus algorithms. The algorithm for securing "
"an agreement is what is known as *consensus*. The consensus layer contains "
"the algorithm, but the algorithm should not be confused with the consensus "
"layer."
msgstr ""
"Casper использует алгоритм `Highway "
"<https://docs.casperlabs.io/en/latest/theory/highway.html>`_ - часть "
"семейства алгоритмов консенсуса *CBC Casper*. Алгоритм, обеспечивающий "
"безопасность соглашения известен как *консенсус*. На слое консенсуса "
"содержится алгоритм, но не путайте алгоритм и сам слой консенсуса. "

#: ../../glossary/C.rst:31
msgid "Contract runtime"
msgstr "Среда выполнения контракта"

#: ../../glossary/C.rst:32
msgid ""
"Enables developers to use a seamless workflow for authoring and testing "
"their `smart contracts <S.html#smart-contract>`_. This environment can also "
"be used for continuous integration, enabling Rust smart contracts to be "
"managed using development best practices."
msgstr ""
"Позволяет разработчикам вести бесперебойный рабочий процесс создания и "
"тестирования их смарт-контрактов `smart contracts <S.html#smart-contract>`_."
"  Среда также может быть использована для продолжительной интеграции, "
"позволяющей смарт-контрактам на Rust быть управляемыми с помощью лучших "
"методов разработки. "

#: ../../glossary/C.rst:35
msgid "Crate"
msgstr "Крейт"

#: ../../glossary/C.rst:36
msgid ""
"A compilation unit in Rust. A crate can be compiled into a binary or into a "
"library. By default, *rustc*, the compiler for the Rust programming "
"language, will produce a binary from a crate."
msgstr ""
"Юнит компиляции в Rust. Крейт может быть компилирован в бинарный файл либо "
"библиотеку. По умолчанию *rustc* компилятор для языка программирования Rust,"
" производит бинарный файл из крейта. "

#: ../../glossary/C.rst:39
msgid "CSPR"
msgstr "CSPR"

#: ../../glossary/C.rst:40
msgid ""
"CSPR is the Casper token pre-defined on the Casper network and used to pay "
"for transaction execution and for `staking <S.html#staking>`_ (securing the "
"network). The total number of CSPR tokens is 10 billion."
msgstr ""
"CSPR - это токен Casper, заданный для сети Casper и используемый для оплаты "
"исполнения транзакций и стейкинга `staking <S.html#staking>`_ (для защиты "
"сети). Общее количество токенов CSPR равняется 10 миллиардам. "

#~ msgid ""
#~ "Enables developers to use a seamless workflow for authoring and testing "
#~ "their `smart contracts <S.html#smart-contracts>`_. This environment can also"
#~ " be used for continuous integration, enabling Rust smart contracts to be "
#~ "managed using development best practices."
#~ msgstr ""
#~ "Позволяет разработчикам вести бесперебойный рабочий процесс создания и "
#~ "тестирования их `смарт-контрактов <S.html#smart-contracts>`_. Среда также "
#~ "может быть использована для продолжительной интеграции, позволяющей смарт-"
#~ "контрактам на Rust быть управляемыми с помощью лучших методов разработки. "
