# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, CasperLabs LLC
# This file is distributed under the same license as the CasperLabs Tech
# Spec package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
# 
# Translators:
# David Tsaritov <tsaritov@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CasperLabs Tech Spec\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-26 20:13+0000\n"
"PO-Revision-Date: 2021-06-26 21:46+0000\n"
"Last-Translator: David Tsaritov <tsaritov@gmail.com>, 2021\n"
"Language-Team: Russian (https://www.transifex.com/caspernetwork/teams/122124/ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:2
msgid "Contract Example"
msgstr "Пример контракта"

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:4
msgid "This section covers an example smart contract used for key management."
msgstr ""
"Этот раздел описывает пример смарт-контракта, используемого для управления "
"ключами."

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:7
msgid "Implementing the Smart Contract"
msgstr "Выполнение смарт-контракта"

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:9
msgid ""
"First, download `the example contract and client <https://github.com/casper-"
"ecosystem/keys-manager>`_ for key management."
msgstr ""
"Для начала загрузите пример контракта и клиента `the example contract and "
"client <https://github.com/casper-ecosystem/keys-manager>`_ для управления "
"ключами."

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:15
msgid ""
"The smart contract above can help you manage your account. You can add keys "
"and remove keys from your account, define weights for each key, and set "
"thresholds for key management and network deployments."
msgstr ""
"Приведенный выше смарт-контракт может помочь вам управлять своим аккаунтом. "
"Вы можете добавлять ключи и удалять ключи из своего аккаунта, определять "
"веса для каждого ключа и устанавливать пороговые значения для управления "
"ключами и развертывания сети."

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:17
msgid ""
"You could also refer to this smart contract as the `account code`. Note that"
" once you deploy this smart contract, you cannot change it. As a result, you"
" can rely on its behavior and state as if it were a binding agreement."
msgstr ""
"Вы также можете ссылаться на этот смарт-контракт как на \"код аккаунта'. "
"Обратите внимание, что после развертывания этого смарт-контракта вы не "
"сможете его изменить. В результате вы можете положиться на его поведение и "
"состояние, как если бы это было обязательное соглашение."

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:19
msgid ""
"The account code execution starts in ``main.rs``, where the ``call`` "
"function calls the ``execute`` function.  This code is similar to a script "
"that executes and implements your account behavior. Remember that when you "
"send a contract (WASM file) to the network, the contract execution engine "
"will invoke the ``call`` function. You will find the details of the "
"``execute`` function in ``lib.rs``, which defines the smart contract "
"behavior and its functions."
msgstr ""
"Выполнение кода аккаунта начинается в \"main.rs\", где функция \"вызов\" "
"вызывает функцию \"выполнить\". Этот код похож на скрипт, который выполняет "
"и реализует поведение вашего аккаунта. Помните, что когда вы отправляете "
"контракт (файл WASM) в сеть, механизм выполнения контракта вызовет функцию "
"\"вызов\". Вы найдете подробную информацию о функции `выполнить` в разделе "
"`lib.rs`, который определяет поведение смарт-контракта и его функции."

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:23
msgid "Function"
msgstr "Функция"

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:23
msgid "Description"
msgstr "Описание"

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:25
msgid "execute"
msgstr "выполнить"

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:25
msgid "Read arguments and set key weights and action thresholds."
msgstr ""
"Чтение переменных и установка ключевых весов и пороговых значений аккаунта."

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:26
msgid "set_key_weight"
msgstr "set_key_weight"

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:26
msgid "Set a weight for a specific key."
msgstr "Настройка веса для определенного ключа."

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:27
msgid "add_or_update_key"
msgstr "add_or_update_key"

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:27
msgid "Add or update a key, given the key and the weight."
msgstr "Добавление или обновление ключа с известными ключа и веса."

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:28
msgid "add_key"
msgstr "add_key"

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:28
msgid "Add a specific key."
msgstr "Добавление определенного ключа."

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:29
msgid "remove_key_if_exists"
msgstr "remove_key_if_exists"

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:29
msgid "Remove a key if it exists."
msgstr "Удаление ключа, если он уже задан."

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:30
msgid "set_threshold"
msgstr "set_threshold"

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:30
msgid ""
"Set the threshold for key management and deployments, given the permission "
"level and associated weight."
msgstr ""
"Настройка пороговых значений для ключей и развертываний с известными "
"уровнями разрешений и связанным весом."

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:33
msgid ""
"You will find a construct to handle the contract arguments in ``api.rs``. "
"Also, possible errors can arise and are defined in ``errors.rs``. You will "
"see that ``lib.rs`` uses both of these libraries:"
msgstr ""
"Вы можете найти конструкт для управления переменными контракта в ``api.rs``."
" Также возможные ошибки могут возникнуть и определены в ``errors.rs``. Вы "
"можете увидеть, что ``lib.rs`` использует обе этих библиотеки:"

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:41
msgid ""
"In the next section, you will build and prepare the smart contract for "
"deployment."
msgstr ""
"В следующем разделе мы соберем и подготовим смарт-контракт дя развертывания."

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:44
msgid "Building the Smart Contract"
msgstr "Сборка смарт-контракта"

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:46
msgid ""
"Before building the smart contract for this tutorial, you need to install "
"the `Rust Contract SDK <https://docs.casperlabs.io/en/latest/dapp-dev-guide"
"/setup-of-rust-contract-sdk.html>`_. Make sure you have the `development "
"environment set up <https://docs.casperlabs.io/en/latest/dapp-dev-guide"
"/setup-of-rust-contract-sdk.html#development-environment-setup>`_ before "
"proceeding."
msgstr ""
"Перед сборкой смарт-контракта для этого туториала вам нужно установить набор"
" инструментов  `Rust Contract SDK <https://docs.casperlabs.io/en/latest"
"/dapp-dev-guide/setup-of-rust-contract-sdk.html>`_. Убедитесь перед началом "
"работы, что у вас настроена 'среде разработки "
"<https://docs.casperlabs.io/en/latest/dapp-dev-guide/setup-of-rust-contract-"
"sdk.html#development-environment-setup>`_  ."

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:48
msgid ""
"Navigate to the ``keys-manager`` folder and set up the WASM compilation Rust"
" toolchain, which will give you access to all the tools needed for "
"developing smart contracts."
msgstr ""
"Пройдите в папку управления ключами ``keys-manager``  и настройте цепочку "
"инструментов Rust для компиляции WASM, которая даст вам доступ ко всем "
"инструментам, необходимым для разработки смарт-контрактов."

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:56
msgid ""
"Next, open the ``contract`` folder and notice that it contains a "
"``Cargo.toml`` file, which defines a smart contract called ``keys-manager``."
" The ``cargo build`` command will invoke this file to generate the "
"corresponding WASM file."
msgstr ""
"Далее откройте папку контракта ``contract`` и обратите внимание, содержит ли"
" она файл ``Cargo.toml``, который определяет смарт-контракт под именем "
"``keys-manager``. Команда сборки ``cargo build`` вызовет этот файл для "
"генерации соответствующего WASM файла."

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:58
msgid ""
"Compile the smart contract and create the WASM file using these commands:"
msgstr ""
"Скомпилируйте смарт-контракт и создайте WASM файл, используя эти команды:"

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:65
msgid ""
"If the command were successful, you would find a ``keys-manager.wasm`` file "
"in the following directory structure:"
msgstr ""
"Если команды были успешны, вы увидите файл ``keys-manager.wasm`` в следующей"
" структуре каталога:"

msgid "The contract directory structure contains a keys-manager-wasm file."
msgstr "Структура каталога контракта содержит wasm файл управления ключами."

#: ../../dapp-dev-guide/tutorials/multi-sig/contract.rst:73
msgid ""
"Next, we will review the sample client that invokes this contract to setup "
"the account and perform key management."
msgstr ""
"Далее мы рассмотрим сэмпл клиента, который вызовет этот контракт для "
"установки аккаунта и выполнения настройки ключей."
